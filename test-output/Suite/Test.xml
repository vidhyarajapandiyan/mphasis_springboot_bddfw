<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-094V9MO2" name="Test" tests="2" failures="2" timestamp="30 Jul 2020 02:56:15 GMT" time="0.441" errors="0">
  <testcase name="runScenario" time="0.013" classname="com.mphasis.qe.runner.CucumberRunnerTest">
    <failure type="io.cucumber.core.exception.CucumberException" message="More than one Cucumber ObjectFactory was found in the classpath

Found: io.cucumber.spring.SpringFactory, io.cucumber.picocontainer.PicoFactory

You may have included, for instance, cucumber-spring AND cucumber-guice as part of
your dependencies. When this happens, Cucumber can&amp;apos;t decide which to use.
In order to enjoy dependency injection features, either remove the unnecessary dependenciesfrom your classpath or use the `cucumber.object-factory` property or `@CucumberOptions(objectFactory=...)` to select one.
">
      <![CDATA[io.cucumber.core.exception.CucumberException: More than one Cucumber ObjectFactory was found in the classpath

Found: io.cucumber.spring.SpringFactory, io.cucumber.picocontainer.PicoFactory

You may have included, for instance, cucumber-spring AND cucumber-guice as part of
your dependencies. When this happens, Cucumber can't decide which to use.
In order to enjoy dependency injection features, either remove the unnecessary dependenciesfrom your classpath or use the `cucumber.object-factory` property or `@CucumberOptions(objectFactory=...)` to select one.

	at io.cucumber.core.runtime.ObjectFactoryServiceLoader.loadSingleObjectFactoryOrDefault(ObjectFactoryServiceLoader.java:77)
	at io.cucumber.core.runtime.ObjectFactoryServiceLoader.loadObjectFactory(ObjectFactoryServiceLoader.java:44)
	at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(ThreadLocal.java:284)
	at java.lang.ThreadLocal.setInitialValue(ThreadLocal.java:180)
	at java.lang.ThreadLocal.get(ThreadLocal.java:170)
	at io.cucumber.core.runtime.ThreadLocalObjectFactorySupplier.get(ThreadLocalObjectFactorySupplier.java:19)
	at io.cucumber.core.runtime.BackendServiceLoader.loadBackends(BackendServiceLoader.java:44)
	at io.cucumber.core.runtime.BackendServiceLoader.get(BackendServiceLoader.java:34)
	at io.cucumber.core.runtime.BackendServiceLoader.get(BackendServiceLoader.java:30)
	at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:50)
	at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(ThreadLocal.java:284)
	at java.lang.ThreadLocal.setInitialValue(ThreadLocal.java:180)
	at java.lang.ThreadLocal.get(ThreadLocal.java:170)
	at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:44)
	at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:121)
	at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:29)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
  <testcase name="runScenario" time="0.003" classname="com.mphasis.qe.runner.CucumberRunnerTest">
    <failure type="io.cucumber.core.exception.CucumberException" message="More than one Cucumber ObjectFactory was found in the classpath

Found: io.cucumber.spring.SpringFactory, io.cucumber.picocontainer.PicoFactory

You may have included, for instance, cucumber-spring AND cucumber-guice as part of
your dependencies. When this happens, Cucumber can&amp;apos;t decide which to use.
In order to enjoy dependency injection features, either remove the unnecessary dependenciesfrom your classpath or use the `cucumber.object-factory` property or `@CucumberOptions(objectFactory=...)` to select one.
">
      <![CDATA[io.cucumber.core.exception.CucumberException: More than one Cucumber ObjectFactory was found in the classpath

Found: io.cucumber.spring.SpringFactory, io.cucumber.picocontainer.PicoFactory

You may have included, for instance, cucumber-spring AND cucumber-guice as part of
your dependencies. When this happens, Cucumber can't decide which to use.
In order to enjoy dependency injection features, either remove the unnecessary dependenciesfrom your classpath or use the `cucumber.object-factory` property or `@CucumberOptions(objectFactory=...)` to select one.

	at io.cucumber.core.runtime.ObjectFactoryServiceLoader.loadSingleObjectFactoryOrDefault(ObjectFactoryServiceLoader.java:77)
	at io.cucumber.core.runtime.ObjectFactoryServiceLoader.loadObjectFactory(ObjectFactoryServiceLoader.java:44)
	at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(ThreadLocal.java:284)
	at java.lang.ThreadLocal.setInitialValue(ThreadLocal.java:180)
	at java.lang.ThreadLocal.get(ThreadLocal.java:170)
	at io.cucumber.core.runtime.ThreadLocalObjectFactorySupplier.get(ThreadLocalObjectFactorySupplier.java:19)
	at io.cucumber.core.runtime.BackendServiceLoader.loadBackends(BackendServiceLoader.java:44)
	at io.cucumber.core.runtime.BackendServiceLoader.get(BackendServiceLoader.java:34)
	at io.cucumber.core.runtime.BackendServiceLoader.get(BackendServiceLoader.java:30)
	at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:50)
	at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(ThreadLocal.java:284)
	at java.lang.ThreadLocal.setInitialValue(ThreadLocal.java:180)
	at java.lang.ThreadLocal.get(ThreadLocal.java:170)
	at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:44)
	at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:121)
	at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:29)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
</testsuite> <!-- Test -->
